type: "SNIPPET_NOTE"
folder: "4d7e758b4f010b205cc7"
title: "C#SOLID_ISP"
description: "C#SOLID_ISP"
snippets: [
  {
    name: "C#SOLID_ISP.cs"
    mode: "C#"
    content: '''
      //インターフェイス分離の法則とは
      
      インターフェイス分離の法則とはソフトウェアの設計をより良くするための基本的な思想です。
      この思想は、以下より成り立ちます。
      
      "クライアントに、クライアントが利用しないメソッドへの依存を強制してはならない"
      
      すなわち以下を満たしている必要があるのです。
      
      ・インターフェイスに不要なメソッドを載せない
      ・あらかじめ、責務ごとに適切にインターフェイスを分ける
      ・関連性を持ったインターフェイスをグループ化して、抽象基本クラスとして分けて利用する
      
      多機能なインターフェイスがあると、実装するクラスのなかには、インターフェイスに含まれる
      メソッドを利用しないものがある場合があります。このとき、自分に関係のないメソッドの
      変更の影響を受けてしまう可能性があり、バグの温床になりえます。
    '''
  }
]
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-11-06T05:39:32.574Z"
updatedAt: "2017-11-06T06:21:30.594Z"
