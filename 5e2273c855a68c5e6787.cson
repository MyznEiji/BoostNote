type: "SNIPPET_NOTE"
folder: "4d7e758b4f010b205cc7"
title: "C#Operator"
description: "C#Operator"
snippets: [
  {
    name: "C#Operator.cs"
    mode: "C#"
    content: '''
      //Operator
      
      //算術演算子
      +,-,*,/,%(剰余演算子),++,--がある
      "オペランド"
      演算子によって操作されるもの
      
      
      1 一方がdoubleなら他方もdoubleに変換
      2 一方がfloatなら他方もfloatに変換　
      3 一方がulongなら他方もulongに変換
      4 一方がlongなら他方もlongに変換
      5 一方がunitで他方が符号付きならlongに変換
      6 一方がunitなら他方もunitに変換
      7 一方がintなら他方もintに変換
      
      "インクリメント演算子"
      a++
      ++a
      
      int a = 10;
      print(a++) //aが出力されてから足される
      print(++a) //aが足されてから出力される
      
      "デクリメント演算子"
      a--
      --a
      
      
      
      //関係演算子
      
      == : 等しい 
      != : 等しくない
      > : 大きい
      < : 小さい
      >= : 等しいか大きい
      <= : 等しいか小さい
      
      "条件演算子"
      条件式 ? 式1 : 式2;
      条件式が真の時は式1が評価して,偽の時は式2が評価される
      
      //論理演算子
      && : 論理和(AまたはB)や|| : 論理積(AかつB)を表す
      
      
      "論理関係演算子(logical relational operator)" 
      A && BやA || Bがある
      "ビット論理演算子(bitwise logical operator)"
      &,|,^,~の4つがあり
      &は対応するビットが1と1のときは1。それ以外は0。
      |は対応するビットが0と0のときは0。それ以外は0
      ^は対応するビットが0と1、1と０のように異なれば1。それ以外は0
      
      A & BはAとBともに真のとき真、それ以外は偽
      A | BはAとBともに偽のとき偽、それ以外は真
      A ^ BはAとBが異なれば真、それ以外は偽
      
      ~はint,unit,long,ulongに対してビットごとの補数演算を行う
      
      "補数"
      コンピュータがマイナスの計算をするために考え出されたもの
      8ビットの整数で考えると、先頭ビットが0のときは正、1のときは負と考える
      マイナス表現ができる
      
      "否定演算子(negation operator)"
      !で表される
      
      
      
      //代入演算子
      変数 = 式;
      式の値を変数に代入する単純な=で表すもの
      
      "複合代入演算子"
      変数 -=　式;
      
      
      
      //ビット演算子
    '''
  }
]
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-10-27T09:10:56.011Z"
updatedAt: "2017-10-27T09:11:08.440Z"
