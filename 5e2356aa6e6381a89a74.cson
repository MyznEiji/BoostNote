type: "SNIPPET_NOTE"
folder: "4d7e758b4f010b205cc7"
title: "C#General"
description: "C#General"
snippets: [
  {
    name: "C#General.cs"
    mode: "C#"
    content: '''
      //General
      
      //.NET Framework
      C#は.NET Framework上で動作します。
      マイクロソフト社が2000年6月に発表したアプリケーション開発・実行環境です。
      .NETに対応したアプリケーションは.NET Frameworkがインストールされている環境であれば
      OSに関係なく動作する
      
      .NET対応アプリケーションは、MSIL(Microsoft Intermediate Language)と呼ばれる
      中間コードから成り立っている
      
      中間コードの仕様、プログラムの中のデータの型とか、実行ファイルの形式などは
      CLI(共通言語基盤、Common Language Infrastructure)で細かく規定されています。
      人間が直接書くコードをソースコード
      コンピュータが理解できるコードをネイティブコード
      そのちょうど中間のコードが中間コード。
      
      書いたC#はMSILに変換される
      MSILはそのまま実行できず、実行時は実行時コンパイラである
      CLR(Common Language Runtime)がMSILをネイティブコードに一気に翻訳してから
      実行が開始される
      
      
      //コメントアウト
      //hogefugapiyo
      /* hoge
         fuga
         piyo */
         
         
      //public static void Main()
      1 C#は必ずMainメソッドから開始される
      2 publicとは他のクラスからでも呼び出せるという意味
      3 static クラスのインスタンスが作成されなくても呼び出せる機能
      4 voidはメソッドが呼び出し元に値を返さないという意味
      
      //名前空間
      本来はメソッドを呼び出すのに名前空間名.クラス名.メソッド名とするが、
      プログラムの最初にusing System;などとすることで名前空間名を省略できる。
      
      
         
      //C#のエスケープ文字
      ¥n 改行
      ¥r キャリッジリターン
      ¥t タブ
      ¥' シングルクォート
      ¥" ダブルクォート
      ¥0 or O ヌル文字
      ¥b バックスペース
      ¥¥ 円記号
      ¥b バックススペース
      ¥v 垂直タブ
      ¥f 改ページ
      
      
      //定義の仕方の種類、アクセス
      "Object.Property"
      インスタンスプロパティの場合
      "ClassName.Property"
      静的プロパティの場合
      "ClassName.Method"
      静的メソッドであるとき
      "Object.Method"
      クラスのメソッドがインスタンスメソッドである時
      
      
      //new 演算子
      メモリの空き領域にオブジェクトのために領域を確保する働きをする。
      
      
      //値による呼び出し
      C#でメソッドを呼び出すときは値による呼び出しが行われます。呼び出し側の引数のコピーが
      渡されるということ。
      このコピーに変更が加わっても、元の変数には影響はない。
      これは値型、参照型で影響どちらも同じ
    '''
  }
]
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-09-26T19:10:05.181Z"
updatedAt: "2017-10-27T09:18:44.083Z"
