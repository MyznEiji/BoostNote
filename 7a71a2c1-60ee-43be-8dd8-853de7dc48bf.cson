createdAt: "2018-04-07T15:20:03.437Z"
updatedAt: "2018-04-09T11:52:22.835Z"
type: "SNIPPET_NOTE"
folder: "a6d21478f5c795467587"
title: "JavaScriptValiable"
description: "JavaScriptValiable"
snippets: [
  {
    name: "valiable.js"
    mode: "JavaScript"
    content: '''
      # 変数の宣言
        var 変数名 [=初期値] 
        var msg;
        var x, y;
      
        "let命令"
        重複を許さない。
        より細く変数の有効範囲を管理できる
        let x, y;
        let x;
        上記はエラーになる
      
      # 定数の宣言
        const TAX = 1.08;
        定数の識別として
        全て大文字で単語をアンダースコアで区切るのが一般的
        
        
      # ローカル変数、グローバル変数
        var命令を使わずに宣言された変数を全てグローバル変数とみなす
        ローカル変数を定義するには必ずvar命令を使用する
        
        scope = 'Grobal';
      
        function getValue()
        {
          scope = 'Local Variable'; #上書きされる
          return scope;
        }
      
        print(getValue());
        print(scope);
      
      
        "それぞれの変数を定義する"
      
            var scope = 'Grobal';
      
            function getValue()
            {
              var scope = 'Local Variable';
              return scope;
            }
      
            print(getValue());
            print(scope);
      
    '''
  }
]
tags: [
  "var"
  "let"
  "ローカル変数"
  "グローバル変数"
]
isStarred: false
isTrashed: false
