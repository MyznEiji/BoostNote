type: "SNIPPET_NOTE"
folder: "7cb7449b9a7bb5682bf5"
title: "StateMachineBehaviour"
description: "StateMachineBehaviour"
snippets: [
  {
    name: "StateMachineBehaviour.cs"
    mode: "C#"
    content: '''
      //StateMachineBehaviour
      Animatorのステートマシンの状態遷移に合わせてCallBack関数を実行してくれるという
      性質のものです。
      
      //使い方
      StateMachineBehaviourを継承したクラスを用意し、
      AddBehaviourボタンを使って振る舞いを登録するだけです。
      
      public class StateMachineExample : StateMachineBehaviour
      {
      
          public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
          {
              //新しいステートに移り変わった時に実行
          }
      
          public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
          {
              //ステートが次のステートに移り変わる直前に実行
          }
      
          public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
          {
              //スクリプトが貼り付けられたステートマシンに遷移してきた時に実行
          }
      
          public override void OnStateMachineExit(Animator animator, int stateMachinePathHash)
          {
              //スクリプトが貼り付けられたステートマシンから出て行く時に実行
          }
      
          public override void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
          {
              //MonoBehaviour.OnAnimatorMoveの直後に実行される
          }
      
          public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
          {
              //最初と最後のフレームを除く、各フレーム単位で実行
          }
      
          public override void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
          {
              //MonoBehaviour.OnAnimatorIKの直後に実行される
          }
      }
    '''
  }
]
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-10-04T04:41:20.265Z"
updatedAt: "2017-10-04T04:48:41.170Z"
