type: "SNIPPET_NOTE"
folder: "4d7e758b4f010b205cc7"
title: "C#SOLID_LSP"
description: "C#SOLID_LSP"
snippets: [
  {
    name: "C#SOLID_LSP.cs"
    mode: "C#"
    content: '''
      //リスコフの置換原則とは
      リスコフの置換原則とは、OCPと同様にソフトウェアの設計をより良くするための基本的な
      思想です。この思想は以下の条件から成ります。
      
      "派生型はその基本型と置換可能でなければならない"
      
      これを作成側、使用側、実装側からそれぞれ見ると、以下のようになっている必要があります。
      
      立場	 条件
      作成側	継承元の意図から外れた実装をしてはならない
      使用側	基本型を引数に取る関数に、どんな派生クラスを渡しても正常に
            動作しなければならない
      実装側	派生クラスがその基本クラスで使用される際に正常に動作しなければならない
      
      
      このリスコフの置換原則を満たしていない場合、使う側に渡す引数を意識させることに成り、
      機能拡張や修正が困難に成ります。すなわち、リスコフの置換原則を違反した時、
      必然的にOpenClosed原則を違反したことになります。
    '''
  }
]
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-11-06T05:07:55.719Z"
updatedAt: "2017-11-06T06:21:26.267Z"
