type: "SNIPPET_NOTE"
folder: "7cb7449b9a7bb5682bf5"
title: "UnityStructure"
description: "UnityStructure"
snippets: [
  {
    name: "UnityStructure.cs"
    mode: "C#"
    content: '''
      //構造体
      構造体はクラスととてもよく似ています
      以下のことは、クラスと同様に可能です。
      
      引数なしのコンストラクター、デストラクター以外のメンバの定義
      インターフェイスの実装（複数可）
      静的メンバの定義
      
      
      struct 構造体名
      {
          .....
      }
      
      
      クラスと決定的に違うことは、クラスは参照型であるのに対して、構造体は値型であることです。
      構造体は宣言した時点でデータを記録するためのメモリ領域が確保されます。また、
      クラス型のフィールドの場合は初期化するまで(newやインスタンス代入)の間、
      null(何のインスタンスも指していない状態)が入ります。一方、構造体の場合は、
      0初期化状態になっています。
      
      
      
      型	　　　　　　　　　　　　　値
      数値型(int,doubleなど)	　　0
      列挙型	　　　　　　　　　　　0に相当する値
      bool型	                　false
      参照型(stringや配列など)	 null
      Null許容型	              null
        
        
        
      構造体では初期化子を使ってインスタンス変数を初期化することができないので、「public int x = 10;」などと、初期化をした場合エラーが発生してしまいます。
      
      
      
      
    '''
  }
]
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-09-19T12:35:35.958Z"
updatedAt: "2017-09-19T12:58:36.047Z"
