type: "SNIPPET_NOTE"
folder: "4d7e758b4f010b205cc7"
title: "C#SOLID_DPI"
description: "C#SOLID_DPI"
snippets: [
  {
    name: "C#SOLID_DPI.cs"
    mode: "C#"
    content: '''
      //依存関係逆転の原則とは
      
      依存関係逆転の原則とは、ソフトウェアの設計をより良くするための基本的な思想です。
      この思想は以下の条件から成ります。
      
      "上位のモジュールは下位のモジュールに依存してはならない。"
      "どちらのモジュールも「抽象」に依存すべきである。"
      "「抽象」は実装の詳細に依存してはならない。実装の詳細が「抽象」に依存すべきである。"
      
      上位モジュール(利用する側)が下位モジュール(利用される側)に依存していると、
      下位モジュールの変更が上位モジュールに影響を与えてしまいます。
      そこで、依存関係逆転の法則を使うことで、下位モジュールが上位モジュールに
      依存するようになり、上位モジュールが下位モジュールに影響を与える様になります。
      
      
      
      //依存性の注入(Dependency Injection, DI)
      依存先の下位のクラスを外部から差し込むことを依存性の注入といい、
      依存関係逆転の原則の方法の1つです。
      
      
    '''
  }
]
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-11-06T06:20:54.305Z"
updatedAt: "2017-11-06T07:01:53.654Z"
