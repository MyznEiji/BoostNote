type: "SNIPPET_NOTE"
folder: "4d7e758b4f010b205cc7"
title: "C#Strategy"
description: "C#Strategy"
snippets: [
  {
    name: "C#Strategy.cs"
    mode: "C#"
    content: '''
      //Strategyとは
      Strategyとは英語で「戦略」を意味し、このデザインパターンを用いることで、
      戦略の切り替えや追加が簡単に行えるようになります。
      
      if文などで分岐させることでアルゴリズムを変更するなど、プログラミングをしていると、
      メソッドの中に溶け込んだ形でアルゴリズムを実装してしまうことがよくあります。
      Strategyパターンでは、戦略の部分を意識して別クラスとして作成するようにしています。
      戦略部分を別クラスとして作成しておき、戦略を変更したい場合には、
      利用する戦略クラスを変更するという方法で対応します。Strategyパターンを用いることで、
      メソッドの中に溶け込んだ形のアルゴリズムをより柔軟でメンテナンスしやすい
      設計となります。
    '''
  }
]
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-11-03T14:07:02.281Z"
updatedAt: "2017-11-03T14:14:58.574Z"
